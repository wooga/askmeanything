%h1.row
  .col-md-10
    = @round.title
    %small
      .span.date-format{:data => {:date => @round.deadline.try(:iso8601)}}
        = @round.deadline.try(:strftime, '%Y-%m-%d %H:%M %Z')
  .col-md-2
    - if @round.votable?
      %a.btn.btn-success{:href => "/rounds/#{@round.id}/questions/create"}
        %span.glyphicon.glyphicon-plus
        Add a new Question

- unless @round.description.nil?
  %p&= @round.description


.row
  .col-md-8
    = will_paginate @questions, renderer: BootstrapPagination::Sinatra
  .col-md-4{:style => "margin-top:20px"}
    %form{:method => :GET, :action => ""}
      %input{:type=>:hidden, :name => :filter, :value => params[:filter]}
      %a.filter{:href => "/rounds/#{@round.id}/questions",
          :class => (:active if params[:filter].blank?)}
        All
      |
      %a.filter{:href => "/rounds/#{@round.id}/questions?filter=myvotes",
          :class => (:active if params[:filter]=='myvotes')}
        My Votes
      |
      %a.filter{:href => "/rounds/#{@round.id}/questions?filter=notvoted",
          :class => (:active if params[:filter]=='notvoted')}
        Not Voted
      |
      %label{:for => :per_page_selector} Show
      %select#per_page_selector{:name => :per_page}
        %option{:value => 2, :selected => params[:per_page] == 2} 2
        %option{:value => 10, :selected => params[:per_page] == 10} 10
        %option{:value => 50, :selected => params[:per_page] == 50} 50
        %option{:value => 100, :selected => params[:per_page] == 100} 100
        %option{:value => 500, :selected => params[:per_page] == 500} 500
      %button.btn.btn-primary.btn-xs{:type=>:submit} Ok

- if @questions.empty?
  %p{:style => "text-align: center;margin-top:100px;margin-bottom:100px"}
    No Questions found.
- else
  %ul.list-group#question-list{:class => ('votable' if @round.votable?)}
    - @questions.each do |question|
      = haml :'questions/_list_item', :layout => false, :locals => {:question => question}

= will_paginate @questions, renderer: BootstrapPagination::Sinatra

:javascript
  var questionList = $('#question-list.votable')
  questionList.on('click', '.voting .vote:not(.myvote)', function() {
    var questionEl = $(this).parents('li')
    var question = questionEl.data()
    var url = "/rounds/" + question.round + "/questions/" +  question.id + "/vote"
    var value = $(this).hasClass('vote-down') ? -1 : 1
    questionEl.spin()
    $.post(url, {value: value, page:  question.page}).done(function(result) {
      $('#question_'+result.id).replaceWith(result.html)
    }).always(function() {
      questionEl.spin(false)
    }).fail(function(jqXHR, textStatus, errorThrown) {
      alert('Vote could not be saved.')
    });
  });
